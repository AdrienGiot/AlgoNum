import math

def bracket(f,x1,h,c = 1.618033989):
    f1 = f(x1)
    x2 = x1 + h; f2 = f(x2)
    # Determine downhill direction and change sign of h if needed
    if f2 > f1:
        h = -h
        x2 = x1 + h; f2 = f(x2)
        # Check if minimum between x1 - h and x1 + h
        if f2 > f1:
            return x2,x1 - h
    # Search loop
    for i in range (100):
        h = c*h
        x3 = x2 + h; f3 = f(x3)
        if f3 > f2:
            return x1,x3
        x1 = x2; x2 = x3
        f1 = f2; f2 = f3
    print("Bracket did not find a minimum")


def search(f,a,b,tol=1.0e-9):

    nIter = int(math.ceil(-2.078087 * math.log(tol / abs(b - a))))
    R = 0.618033989
    C = 1.0 - R #personnal error : not computing it once and for all
    # First telescoping
    x1 = R * a + C * b; x2 = C * a + R * b #personnal error : first telescoping in the loop
    f1 = f(x1); f2 = f(x2)
    # Main loop
    for i in range(nIter):
        if f1 > f2:
            a = x1
            x1 = x2; f1 = f2
            x2 = C * a + R * b; f2 = f(x2)
        else:
            b = x2
            x2 = x1; f2 = f1
            x1 = R * a + C * b; f1 = f(x1)
    if f1 < f2: return x1,f1 #personnal error (or difference ?) : return the middle point
    else: return x2,f2

def f(x):
    return math.sin(3 * x) + math.cos(x)

xStart = 0.0
h = 0.80
x1,x2 = bracket(f,xStart,h)
x,fMin = search(f,x1,x2)
print("x =",x)
print("f(x) =",fMin)
input ("\nPress return to exit")